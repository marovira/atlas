#version 450 core
#line 2 0

#line 1 1
#ifndef NESTED_INCLUDE_GLSL
#line 2 1
#define NESTED_INCLUDE_GLSL
#line 3 1

#line 1 2
#ifndef UNIFORM_BINDINGS_GLSL
#line 2 2
#define UNIFORM_BINDINGS_GLSL
#line 3 2

#line 4 2
#define VERTEX_LOCATION 0
#line 5 2
#define NORMAL_LOCATION 1
#line 6 2

#line 7 2
#endif
#line 1 3
#ifndef UNIFORM_MATRICES_GLSL
#line 2 3
#define UNIFORM_MATRICES_GLSL
#line 3 3

#line 4 3
layout (std140, binding = 0) uniform Matrices
#line 5 3
{
#line 6 3
    mat4 projection;
#line 7 3
    mat4 view;
#line 8 3
};
#line 9 3

#line 10 3
uniform mat4 model;
#line 11 3

#line 12 3
#endif
#line 6 1

#line 7 1
#endif
#line 4 0

#line 5 0
layout(location = VERTEX_LOCATION) in vec4 pos;
#line 6 0

#line 7 0
void main()
#line 8 0
{
#line 9 0
    gl_Position = projection * view * model * vec4(pos.xyz, 1.0);
#line 10 0
}
